
//beanAWS-s3
  <bean id="region" class="com.amazonaws.regions.RegionUtils" factory-method="getRegion">
  	<constructor-arg value="${amazon.s3.region}"/>
  </bean>
  
  <bean id="basicAWSCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
  	<constructor-arg index="0" value="${amazon.aws.access-key-id}"/>
  	<constructor-arg index="1" value="${amazon.aws.access-key-secret}"/>
  </bean>
  
  <bean id="clientConfiguration" class="com.amazonaws.ClientConfiguration">
  	<property name="connectionTimeout" value="${amazon.s3.client.connection_timeout}"/>
  	<property name="socketTimeout" value="${amazon.s3.client.socket_timeout}"/>
  	<property name="requestTimeout" value="${amazon.s3.client.request_timeout}"/>
  </bean>
  
  <bean id="amazonS3"  class="com.amazonaws.services.s3.AmazonS3Client">
  	<property name="region" ref="region" />
  	<constructor-arg index="0" ref="basicAWSCredentials"/>
  	<constructor-arg index="1" ref="clientConfiguration"/>
  </bean>
  
  <bean id="fileUploadS3Impl" class="com.ericsson.service.manager.v1.controllers.FileUploadS3Impl">
  	<property name="amazonS3" ref="amazonS3"/>
  	<property name="region" value="${amazon.s3.region}"/>
  	<property name="defaultBucket" value="${amazon.s3.default_bucket}"/>
  </bean>

//Ericsson ´úÂëÑù±¾
package com.ericsson.service.manager.v1.controllers;

import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.CannedAccessControlList;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.ericsson.service.manager.v1.exceptions.FileManagementException;
import org.apache.commons.lang.RandomStringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.multipart.MultipartFile;


public class FileUploadS3Impl implements FileUpload{
    private static final Logger LOGGER = LoggerFactory.getLogger(FileManagementController.class);
    private AmazonS3 amazonS3;
    protected String region;
    private String defaultBucket;

    public void setAmazonS3(AmazonS3 amazonS3) {
        this.amazonS3 = amazonS3;
    }

    public void setRegion(String region) {
        this.region = region;
    }

    public void setDefaultBucket(String defaultBucket) {
        this.defaultBucket = defaultBucket;
    }

    @Override
    public String upload(MultipartFile mpf, String id) throws FileManagementException {
        String fileUrl="";
        try {
            String randomNumeric = RandomStringUtils.randomNumeric(5);
            String key = String.valueOf(System.currentTimeMillis()) + randomNumeric + getFileExtension(mpf);
            ObjectMetadata objectMetadata = new ObjectMetadata();
            objectMetadata.setContentType(mpf.getContentType());
            objectMetadata.setContentLength(mpf.getSize());
            PutObjectRequest putObjectRequest = new PutObjectRequest(defaultBucket.trim(), key, mpf.getInputStream(), objectMetadata);
            putObjectRequest.withCannedAcl(CannedAccessControlList.PublicRead);
            amazonS3.putObject(putObjectRequest);
            fileUrl = String.format("https://%s.s3-%s.amazonaws.com/%s", defaultBucket.trim(),region,key);
        } catch (Exception e) {
            LOGGER.error(e.getMessage(), e);
            throw new FileManagementException();
        }
        return fileUrl;
    }
}